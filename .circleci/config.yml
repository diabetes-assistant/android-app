version: 2.1

orbs:
  android: circleci/android@1.0

commands:
  restore_gradle_cache:
    description: "Restore gradle cache"
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
            - v1-dependencies-

  save_gradle_cache:
    description: "Save gradle cache"
    steps:
      - save_cache:
          paths:
            - "~/.ivy2/cache"
            - "~/.gradle"
            - "~/.m2"
          key: v1-dependencies-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}

jobs:
  test:
    docker:
      - image: circleci/android:api-30
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_gradle_cache
      - run: ./gradlew androidDependencies
      - save_gradle_cache
      - run: ./gradlew test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

  static_code_check:
    docker:
      - image: circleci/android:api-30
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_gradle_cache
      - run: ./gradlew androidDependencies
      - save_gradle_cache
      - run: ./gradlew detekt
      - run: ls -all app/build
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/reports

  lint:
    docker:
      - image: circleci/android:api-30
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_gradle_cache
      - run: ./gradlew androidDependencies
      - save_gradle_cache
      - run: ./gradlew lint
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/reports

  build_apk:
    docker:
      - image: circleci/android:api-30
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_gradle_cache
      - run: ./gradlew androidDependencies
      - save_gradle_cache
      - run: ./gradlew assemble
      - store_artifacts:
          path: app/build/outputs/apk
          destination: apk

  build_bundle:
    docker:
      - image: circleci/android:api-30
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_gradle_cache
      - run: ./gradlew androidDependencies
      - save_gradle_cache
      - run: ./gradlew bundle
      - store_artifacts:
          path: app/build/outputs/bundle
          destination: bundle

  end_to_end_test:
    docker:
      - image: circleci/android:api-30
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout
      - restore_gradle_cache
      - run: ./gradlew androidDependencies
      - save_gradle_cache
      - run:
          name: Build debug APK and release APK
          command: |
            ./gradlew :app:assembleDebug
            ./gradlew :app:assembleDebugAndroidTest
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run \
              --device model=flame,version=30,locale=de,orientation=portrait \
              --app app/build/outputs/apk/debug/app-debug.apk \
              --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}

workflows:
  pipeline:
    jobs:
      - test
      - static_code_check
      - lint
      - end_to_end_test:
          requires:
            - test
            - lint
            - static_code_check
      - build_apk:
          requires:
            - end_to_end_test
      - build_bundle:
          requires:
            - build_apk
